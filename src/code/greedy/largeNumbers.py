"""
실전
큰 수의 법칙

이 문제에서 큰 수의 법칙은
다양한 수로 이루어진 배열이 있을 때 주어진 수들을
M번 더하여 가장 큰 수를 만드는 법칙이다.
단, 배열의 특정한 인덱스(번호)에 해당하는 수가
연속해서 K번을 초과하여 더해질 수 없는 것이 이 법칙의 특징이다. 

예) 2 4 5 4 6, M=8, K=3
6 + 6 + 6 + 5 + 6 + 6 + 6 + 5

첫째 줄 배열의 크기 N(2<=N<=1000), 숫자가 더해지는 횟수 M(1<=M<=10000), 해당 인덱스가 연속해서 입력될 수 있는 수 K(1<=K<=10000) 공백으로 구분.
둘째 줄 N개의 자연수. 각 자연수는 공백으로 구분. 각각의 자연수는 1 이상 10000 이하.
입력으로 주어지는 K는 항상 M보다 작거나 같다.

입력 예시
5 8 3
2 4 5 4 6
"""

# n, m, k 입력받기
n, m, k = map(int, input().split())
# num_list 입력 받기
num_list = list(map(int, input().split()))
# result 초기화
result = 0
# 오름차순정렬
num_list.sort()
# 가장 큰 수와 두번째로 큰 수
first = num_list[n - 1]
second = num_list[n - 2]

# 가장 큰 수의 반복횟수가 k 일때 k번 더한 후 두번째로 큰 수를 더하고, 다시 가장 큰 수를 더하는 규칙이다.
# 가장 큰 수와 두번째로 큰 수가 같다면,
# 전체 더하는 횟수(m)만큼 가장 큰 수를 곱하면 된다.
if first == second:
    result = first * m
# 만약 가장 큰 수와 두번째로 큰 수가 다르다면,
# (전체 더하는 횟수(m)를 가장큰 횟수를 연속으로 더할 수 있는 횟수(k)로 나눈 몫) * k 만큼 가장 큰 수를 더하고
# 두번째로 큰 수는 m 을 k로 나눈 나머지만큼 더한다.
else:
    result = (first * k * (m // k)) + (second * (m % k))
print(result)
